==== Samedi 10 Février : ( Amaury SIHARATH ) ====
Réorganisation des packages du projet inspiré de l'organisation des packages du code du CM3 demo2.zip :
	- Conception du package tree.core
	- Conception du package tree.gui
	- Conception du package tree.data
	- Conception du package tree.test
		: Servait à l'origine à héberger le point d'entrée du programme. Package inutile maintenant. Ceci dit, ce serait intéressant de pouvoir mettre les tests unitaires dedans, même temporairement. Penser à les enlever par la suite, surtout avant le rendu final.
	- Conception du package tree.panels
		: N'était pas présent de base dans le code du 3e CM de GLP, créée le temps du développement pour pouvoir mieux se retrouver avec les Panels.

Conception des classes :
	- CheckerBoardPanel => ( classe CheckerBoard renommée) 
	- CheckerBuilder
		: Ne sert à rien pour l'instant
	- PanelsContainer => ( ScreenManager renomée )
		: Permettra de gérer les différents Panels du programme
	- GraphicalChecker
		: Point d'entrée du programme
	- CheckerVisitor
		: Voir comment on peut utiliser cette interface
	- PanelsVisitor
		: Classe créer à l'origine pour récupérer les composantes sur chaque Panel. Pas encore utilisée
	- LaunchGameScreenPanel
		: Représente l'écran de configuration de la partie
	- GPTParameters => ( Il s'agit d'un copier-coller de la classe du 3e CM qu'on a eu en GLP, ça arrive de plagier... Sarcasme mis à part, c'est là qu'on met les constantes inhérentes au rendu graphique de l'application. Faudra bien qu'on s'en serve à l'avenir pour la taille de la fenêtre et bien prendre en compte les échelles )

==== Dimanche 11 Février : ( Amaury SIHARATH ) ====
	- Conception de la classe ClassFactory et Implémentation des méthodes pour la création des composantes graphiques des Panels.
		: Sont appelés dans les méthodes de cette classe les constructeurs de chacun des objets à créer selon leur type et paramètres.

	- Remplacement des créations des composantes dans les Panels par les appels des méthodes de la classe ClassFactory.

==== Mardi 13 Février : ( Amaury SIHARATH ) ====
	- Conception de la classe OptionsScreenPanel et de son IHM.
	- Mise à jour de la classe ClassFactory
	- Conception de la classe ClipPlayer pour jouer des sons.
		: Classe temporaire pour tester l'API Java Sound. Il n'y a que les fichiers de type .wav qui sont supportés de base. Une musique temporaire se lance après avoir lancé le programme. 

==== Mardi 21 Février : ( Amaury SIHARATH ) ====
	- Modifications dans la classe Board
		: Une barre de mana se met maintenant à jour plus ou moins bien. La barre affiche pour l'instant le mana du joueur précédent. Elle s'incrémente cependant sans prendre en compte les bornes de 0 à 100.
		: Des boutons de test pour simuler les coups classiques et les coups spéciaux sont disponibles. La barre de mana se met à jour en conséquence.
		: Des boutons de test pour simuler les pouvoirs spéciaux sont disponibles. La barre de mana se met à jour en conséquence.
		: Le nom du joueur qui doit jouer pendant son tour est affiché en haut à droite de l'écran, juste en-dessous du score des joueurs, et se met à jour comme il faut.
		: Un bouton non-fonctionnel de retour est présent. Permettra plus tard de revenir un tour en arrière en cas d'erreur de la part du joueur précédent, sur accord des autres joueurs humains présents.
==== Mardi 27 Février : ( Amaury SIHARATH ) ====
	- Ajout de quelques lignes de code pour la future fonctionnalité d'historique.
	- La barre de mana se met à jour normalement ( pour l'instant ), et le joueur a le temps de voir la barre de mana se mettre à jour avant que le tour de jeu ne change ( 3 secondes d'intervals entre chaque tour normalement ). 
	- Les boutons de pouvoirs seront grisés tant que le joueur actuel n'a pas la quantité requise de mana pour activer un pouvoir.
	- Ajout de quelques lignes de code dans la classe Player pour bien prendre en compte les bornes pour les manas de chaque joueur. La mana est bien comprise entre 0 et 100 désormais.

Liste TODO :
	- Bien séparer sur la classe CherckerBoardPanel la partie modélisation ( data / données ) et la partie affichage ( gui ). Faire de même sur les autres classes qui héritent de Panel ?
	- Réorganiser et purger les packages et classes.
	- Commencer à implémenter certaines classes de données.